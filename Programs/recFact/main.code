; Recursive factorial calculation

call regs_clean

in
pop rax

call fact ;(rax = target) return rcx

push rcx
out

exit:
hlt

;===========================================================

; iterator and result init for fact_rec
; fact (rax - target, rbx = 0 - iterator, rcx - result = 1)
fact:
    push 0
    pop rbx
    push 1
    pop rcx

    call fact_rec
    ret

;===========================================================

; recursive fact function
; fact (rax - target, rbx = iterator, rcx = result)
fact_rec:
    push rax ;target
    push rbx ;iterator
    jbe fact_rec_ret ; if (target <= iterator) return;

    ;iterator increment
    push rbx+1
    pop rbx

    push rcx
    push rbx
    mul      ;result * iterator
    pop rcx  ;write result

    call fact_rec ;recursive call

    fact_rec_ret:
    ret

;===========================================================

; Registers cleaning function
regs_clean:

call rax_clean
call rbx_clean
call rcx_clean
call rdx_clean

ret

;===========================================================

rax_clean:
push 0
pop rax
ret

rbx_clean:
push 0
pop rbx
ret

rcx_clean:
push 0
pop rcx
ret

rdx_clean:
push 0
pop rdx
ret
