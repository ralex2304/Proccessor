;Signature: KU
;Version: 1
;line | addr | command
;   1 | 0004 |                                                          | ; Recursive factorial calculation
;   2 | 0004 |                                                          | 
;   3 | 0004 | 0B 04 7D 00 00 00 00 00 00 00                            | call regs_clean (125)
;   4 | 0014 |                                                          | 
;   5 | 0014 | 10 00                                                    | in
;   6 | 0016 | 02 01 00                                                 | pop rax
;   7 | 0019 |                                                          | 
;   8 | 0019 | 0B 04 24 00 00 00 00 00 00 00                            | call fact (36) ;(rax = target) return rcx
;   9 | 0029 |                                                          | 
;  10 | 0029 | 01 01 02                                                 | push rcx
;  11 | 0032 | 11 00                                                    | out
;  12 | 0034 |                                                          | 
;  13 | 0034 |                                                          | exit:
;  14 | 0034 | 00 00                                                    | hlt
;  15 | 0036 |                                                          | 
;  16 | 0036 |                                                          | ;===========================================================
;  17 | 0036 |                                                          | 
;  18 | 0036 |                                                          | ; iterator and result init for fact_rec
;  19 | 0036 |                                                          | ; fact (rax - target, rbx = 0 - iterator, rcx - result = 1)
;  20 | 0036 |                                                          | fact:
;  21 | 0036 | 01 02 00 00 00 00 00 00 00 00                            | push 0.000000
;  22 | 0046 | 02 01 01                                                 | pop rbx
;  23 | 0049 | 01 02 00 00 00 00 00 00 F0 3F                            | push 1.000000
;  24 | 0059 | 02 01 02                                                 | pop rcx
;  25 | 0062 |                                                          | 
;  26 | 0062 | 0B 04 48 00 00 00 00 00 00 00                            | call fact_rec (72)
;  27 | 0072 |                                                          | 
;  28 | 0072 |                                                          | ;===========================================================
;  29 | 0072 |                                                          | 
;  30 | 0072 |                                                          | ; recursive fact function
;  31 | 0072 |                                                          | ; fact (rax - target, rbx = iterator, rcx = result)
;  32 | 0072 |                                                          | fact_rec:
;  33 | 0072 | 01 01 00                                                 | push rax ;target
;  34 | 0075 | 01 01 01                                                 | push rbx ;iterator
;  35 | 0078 | 07 04 7B 00 00 00 00 00 00 00                            | jbe fact_rec_ret (123) ; if (target <= iterator) return;
;  36 | 0088 |                                                          | 
;  37 | 0088 |                                                          | ;iterator increment
;  38 | 0088 | 01 03 01 00 00 00 00 00 00 F0 3F                         | push rbx+1.000000
;  39 | 0099 | 02 01 01                                                 | pop rbx
;  40 | 0102 |                                                          | 
;  41 | 0102 | 01 01 02                                                 | push rcx
;  42 | 0105 | 01 01 01                                                 | push rbx
;  43 | 0108 | 14 00                                                    | mul ;result * iterator
;  44 | 0110 | 02 01 02                                                 | pop rcx ;write result
;  45 | 0113 |                                                          | 
;  46 | 0113 | 0B 04 48 00 00 00 00 00 00 00                            | call fact_rec (72) ;recursive call
;  47 | 0123 |                                                          | 
;  48 | 0123 |                                                          | fact_rec_ret:
;  49 | 0123 | 0C 00                                                    | ret
;  50 | 0125 |                                                          | 
;  51 | 0125 |                                                          | ;===========================================================
;  52 | 0125 |                                                          | 
;  53 | 0125 |                                                          | ; Registers cleaning function
;  54 | 0125 |                                                          | regs_clean:
;  55 | 0125 |                                                          | 
;  56 | 0125 | 0B 04 A7 00 00 00 00 00 00 00                            | call rax_clean (167)
;  57 | 0135 | 0B 04 B6 00 00 00 00 00 00 00                            | call rbx_clean (182)
;  58 | 0145 | 0B 04 C5 00 00 00 00 00 00 00                            | call rcx_clean (197)
;  59 | 0155 | 0B 04 D4 00 00 00 00 00 00 00                            | call rdx_clean (212)
;  60 | 0165 |                                                          | 
;  61 | 0165 | 0C 00                                                    | ret
;  62 | 0167 |                                                          | 
;  63 | 0167 |                                                          | ;===========================================================
;  64 | 0167 |                                                          | 
;  65 | 0167 |                                                          | rax_clean:
;  66 | 0167 | 01 02 00 00 00 00 00 00 00 00                            | push 0.000000
;  67 | 0177 | 02 01 00                                                 | pop rax
;  68 | 0180 | 0C 00                                                    | ret
;  69 | 0182 |                                                          | 
;  70 | 0182 |                                                          | rbx_clean:
;  71 | 0182 | 01 02 00 00 00 00 00 00 00 00                            | push 0.000000
;  72 | 0192 | 02 01 01                                                 | pop rbx
;  73 | 0195 | 0C 00                                                    | ret
;  74 | 0197 |                                                          | 
;  75 | 0197 |                                                          | rcx_clean:
;  76 | 0197 | 01 02 00 00 00 00 00 00 00 00                            | push 0.000000
;  77 | 0207 | 02 01 02                                                 | pop rcx
;  78 | 0210 | 0C 00                                                    | ret
;  79 | 0212 |                                                          | 
;  80 | 0212 |                                                          | rdx_clean:
;  81 | 0212 | 01 02 00 00 00 00 00 00 00 00                            | push 0.000000
;  82 | 0222 | 02 01 03                                                 | pop rdx
;  83 | 0225 | 0C 00                                                    | ret
