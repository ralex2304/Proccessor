;Signature: KU
;Version: 1
;line | addr | command
;   1 | 0004 |                                                          | ; Recursive factorial calculation
;   2 | 0004 |                                                          | 
;   3 | 0004 | 0B 04 7F 00 00 00 00 00 00 00                            | call regs_clean (127)
;   4 | 0014 |                                                          | 
;   5 | 0014 | 10 00                                                    | in
;   6 | 0016 | 02 01 00                                                 | pop rax
;   7 | 0019 |                                                          | 
;   8 | 0019 | 0B 04 24 00 00 00 00 00 00 00                            | call fact (36) ;(rax = target) return rcx
;   9 | 0029 |                                                          | 
;  10 | 0029 | 01 01 02                                                 | push rcx
;  11 | 0032 | 11 00                                                    | out
;  12 | 0034 |                                                          | 
;  13 | 0034 |                                                          | exit:
;  14 | 0034 | 00 00                                                    | hlt
;  15 | 0036 |                                                          | 
;  16 | 0036 |                                                          | ;===========================================================
;  17 | 0036 |                                                          | 
;  18 | 0036 |                                                          | ; iterator and result init for fact_rec
;  19 | 0036 |                                                          | ; fact (rax - target, rbx = 0 - iterator, rcx - result = 1)
;  20 | 0036 |                                                          | fact:
;  21 | 0036 | 01 02 00 00 00 00 00 00 00 00                            | push 0.000000
;  22 | 0046 | 02 01 01                                                 | pop rbx
;  23 | 0049 | 01 02 00 00 00 00 00 00 F0 3F                            | push 1.000000
;  24 | 0059 | 02 01 02                                                 | pop rcx
;  25 | 0062 |                                                          | 
;  26 | 0062 | 0B 04 4A 00 00 00 00 00 00 00                            | call fact_rec (74)
;  27 | 0072 | 0C 00                                                    | ret
;  28 | 0074 |                                                          | 
;  29 | 0074 |                                                          | ;===========================================================
;  30 | 0074 |                                                          | 
;  31 | 0074 |                                                          | ; recursive fact function
;  32 | 0074 |                                                          | ; fact (rax - target, rbx = iterator, rcx = result)
;  33 | 0074 |                                                          | fact_rec:
;  34 | 0074 | 01 01 00                                                 | push rax ;target
;  35 | 0077 | 01 01 01                                                 | push rbx ;iterator
;  36 | 0080 | 07 04 7D 00 00 00 00 00 00 00                            | jbe fact_rec_ret (125) ; if (target <= iterator) return;
;  37 | 0090 |                                                          | 
;  38 | 0090 |                                                          | ;iterator increment
;  39 | 0090 | 01 03 01 00 00 00 00 00 00 F0 3F                         | push rbx+1.000000
;  40 | 0101 | 02 01 01                                                 | pop rbx
;  41 | 0104 |                                                          | 
;  42 | 0104 | 01 01 02                                                 | push rcx
;  43 | 0107 | 01 01 01                                                 | push rbx
;  44 | 0110 | 14 00                                                    | mul ;result * iterator
;  45 | 0112 | 02 01 02                                                 | pop rcx ;write result
;  46 | 0115 |                                                          | 
;  47 | 0115 | 0B 04 4A 00 00 00 00 00 00 00                            | call fact_rec (74) ;recursive call
;  48 | 0125 |                                                          | 
;  49 | 0125 |                                                          | fact_rec_ret:
;  50 | 0125 | 0C 00                                                    | ret
;  51 | 0127 |                                                          | 
;  52 | 0127 |                                                          | ;===========================================================
;  53 | 0127 |                                                          | 
;  54 | 0127 |                                                          | ; Registers cleaning function
;  55 | 0127 |                                                          | regs_clean:
;  56 | 0127 |                                                          | 
;  57 | 0127 | 0B 04 A9 00 00 00 00 00 00 00                            | call rax_clean (169)
;  58 | 0137 | 0B 04 B8 00 00 00 00 00 00 00                            | call rbx_clean (184)
;  59 | 0147 | 0B 04 C7 00 00 00 00 00 00 00                            | call rcx_clean (199)
;  60 | 0157 | 0B 04 D6 00 00 00 00 00 00 00                            | call rdx_clean (214)
;  61 | 0167 |                                                          | 
;  62 | 0167 | 0C 00                                                    | ret
;  63 | 0169 |                                                          | 
;  64 | 0169 |                                                          | ;===========================================================
;  65 | 0169 |                                                          | 
;  66 | 0169 |                                                          | rax_clean:
;  67 | 0169 | 01 02 00 00 00 00 00 00 00 00                            | push 0.000000
;  68 | 0179 | 02 01 00                                                 | pop rax
;  69 | 0182 | 0C 00                                                    | ret
;  70 | 0184 |                                                          | 
;  71 | 0184 |                                                          | rbx_clean:
;  72 | 0184 | 01 02 00 00 00 00 00 00 00 00                            | push 0.000000
;  73 | 0194 | 02 01 01                                                 | pop rbx
;  74 | 0197 | 0C 00                                                    | ret
;  75 | 0199 |                                                          | 
;  76 | 0199 |                                                          | rcx_clean:
;  77 | 0199 | 01 02 00 00 00 00 00 00 00 00                            | push 0.000000
;  78 | 0209 | 02 01 02                                                 | pop rcx
;  79 | 0212 | 0C 00                                                    | ret
;  80 | 0214 |                                                          | 
;  81 | 0214 |                                                          | rdx_clean:
;  82 | 0214 | 01 02 00 00 00 00 00 00 00 00                            | push 0.000000
;  83 | 0224 | 02 01 03                                                 | pop rdx
;  84 | 0227 | 0C 00                                                    | ret
