;Signature: KU
;Version: 1
;line - byte - command
;   1 -    4 -                                                          - ; Calculates factorial of number from input
;   2 -    4 -                                                          -
;   3 -    4 - 01 02 00 00 00 00 00 00 F0 3F                            - push 1.000000
;   4 -   14 - 02 01 00                                                 - pop rax ;iterator
;   5 -   17 -                                                          -
;   6 -   17 - 01 02 00 00 00 00 00 00 F0 3F                            - push 1.000000 ;result is always in stack as first element
;   7 -   27 -                                                          -
;   8 -   27 - 10 00                                                    - in
;   9 -   29 - 02 01 02                                                 - pop rcx ;target
;  10 -   32 -                                                          -
;  11 -   32 -                                                          - for:
;  12 -   32 -                                                          - ;loop clause
;  13 -   32 - 01 01 00                                                 - push rax
;  14 -   35 - 01 01 02                                                 - push rcx
;  15 -   38 - 04 04 4D 00 00 00 00 00 00 00                            - ja exit (77) ;break if rax > rcx (iterator > target)
;  16 -   48 -                                                          -
;  17 -   48 -                                                          - ;multiple iterator and result
;  18 -   48 - 01 01 00                                                 - push rax
;  19 -   51 - 14 00                                                    - mul
;  20 -   53 -                                                          -
;  21 -   53 -                                                          - ;increment iterator
;  22 -   53 - 01 03 00 00 00 00 00 00 00 F0 3F                         - push rax+1.000000
;  23 -   64 - 02 01 00                                                 - pop rax
;  24 -   67 -                                                          -
;  25 -   67 - 03 04 20 00 00 00 00 00 00 00                            - jmp for (32) ;continue loop
;  26 -   77 -                                                          -
;  27 -   77 -                                                          -
;  28 -   77 -                                                          - exit:
;  29 -   77 - 11 00                                                    - out
;  30 -   79 - 00 00                                                    - hlt
